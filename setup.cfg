[metadata]
name = plasmapy
provides = plasmapy
author = PlasmaPy Community
description = Python package for plasma physics
long_description = file: README.md
long_description_content_type = text/markdown
license = BSD+Patent
license_file = LICENSE.md
url = https://www.plasmapy.org
project_urls =
    Documentation=https://docs.plasmapy.org/
    Changelog=https://docs.plasmapy.org/en/stable/whatsnew/index.html
    Source=https://github.com/plasmapy/plasmapy
    Issues=https://github.com/plasmapy/plasmapy/issues/
    Twitter=https://twitter.com/PlasmaPy
    Chat=https://plasmapy.org/chat
edit_on_github = True
github_project = PlasmaPy/PlasmaPy
keywords=plasma physics, plasma, science, atomic
classifiers=
  Development Status :: 4 - Beta
  Intended Audience :: Science/Research
  License :: OSI Approved :: BSD License
  Operating System :: OS Independent
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9
  Programming Language :: Python :: 3.10
  Programming Language :: Python :: Implementation :: CPython
  Topic :: Scientific/Engineering :: Physics
  Topic :: Scientific/Engineering :: Astronomy

[options]
python_requires = >=3.8
packages = find:
include_package_data = True
setup_requires =
  # PEP-518 encourages the use of pyproject.toml for defining
  # build dependencies...they should be defined under build-system.requires
install_requires =
  # ought to mirror requirements/install.txt
  astropy >= 4.3.1
  cached-property >= 1.5.2
  h5py >= 3.0.0
  ipywidgets >= 7.6.5
  lmfit >= 1.0.0
  matplotlib >= 3.3.0
  mpmath >= 1.2.1
  numba
  numpy >= 1.19.0
  packaging
  pandas >= 1.0.0
  scipy >= 1.5.0
  tqdm >= 4.41.0
  voila >= 0.2.15
  wrapt >= 1.11.0
  xarray >= 0.15.0

[options.extras_require]
# a weird "bug" since python 2 allows extras to depend on extras
# for backwards compatibility, setuptools will keep this active
# see https://github.com/pypa/setuptools/issues/1260#issuecomment-438187625
extras =
  # ought to mirror requirements/extras.txt
  # for developers
  codespell
  pre-commit
  tox
tests =
  # ought to mirror requirements/tests.txt
  %(extras)s
  dlint
  flake8
  flake8-absolute-import
  flake8-rst-docstrings
  flake8-use-fstring
  hypothesis
  pydocstyle
  pytest >= 5.4.0
  pytest-regressions
  pytest-xdist
docs =
  # ought to mirror requirements/docs.txt
  %(extras)s
  docutils
  ipykernel
  # TODO: release of 3.1 broke CI tests, this should be revisited later (2022-03-24)
  jinja2 != 3.1
  nbsphinx
  numpydoc
  pillow
  pygments >= 2.11.0
  sphinx >= 4.4
  sphinx-changelog
  sphinx-copybutton
  sphinx-gallery
  sphinx-hoverxref >= 1.0.0
  sphinx_rtd_theme >= 1.0.0
  sphinxcontrib-bibtex
  towncrier >= 19.2.0
developer =
  # install everything for developers
  # ought to functionally mirror requirements.txt
  %(docs)s
  %(extras)s
  %(tests)s
all =
  # The installation option of `pip install plasmapy[all]` has been
  # deprecated since 0.8.0. Instead use `pip install plasmapy` or
  # `pip install plasmapy[developer]`.
  %(extras)s

[options.packages.find]
exclude = docs/automodapi

[options.package_data]
plasmapy.particles.data = *
plasmapy.tests = coveragerc
plasmapy.utils.calculator = *

[options.entry_points]
console_scripts =
  plasma-calculator = plasmapy.utils.calculator:main

[build_docs]
source-dir = docs
build-dir = docs/_build
all_files = 1

[tool:pytest]
minversion = 5.1
testpaths = "plasmapy"
norecursedirs = "build" "docs/"
doctest_optionflags =
    NORMALIZE_WHITESPACE
    ELLIPSIS
    NUMBER
addopts = --doctest-modules --doctest-continue-on-failure
filterwarnings =
    ignore:.*Creating a LegacyVersion.*:DeprecationWarning
looponfailroots =
    plasmapy

[flake8]
convention = numpy
# Checks marked as TODO should be eventually enabled,
# but are failing right now. These are *great*
# first contributions. ;)
# Checks not marked by TODO *maybe* should be
# eventually enabled â€• ask!
extend-ignore =
    D105,
    D107,
    # Ignoring D202 allows blank lines to be put on either side of code "paragraphs" at the beginning of a function.
    D202,
    # D205 and D400 are ignored to allow the "one-liner" to exceed one
    # line, which is sometimes necessary for even concise descriptions of plasma
    # physics functions and classes.
    D205,
    # D302 is unnecessary as we are using Python 3.6+.
    D302,
    # D205 and D400 are ignored to allow the "one-liner" to exceed one
    # line, which is sometimes necessary for even concise descriptions of plasma
    # physics functions and classes.
    D400,
    # D403: First word of the first line should be properly capitalized ('Latex', not 'LaTeX') # Dominik: good job, pydocstyle /s
    D403,
    # E203 something something whitespace? TODO check again
    E203,
    E501,
    # E731 do not assign a lambda, use a def - Dominik: disagreed, lambdas have uses
    E731,
    F401,
    F405,
    # W605 invalid escape sequence,
    W605,
    RST210,
    RST213,
    # RST305 so that ReST substitutions in a different file can be used
    RST305,
    RST306
exclude =
    extern,
    sphinx,
    *test*,
    *parsetab.py,
    conftest.py,
    docs/conf.py,
    setup.py,
    .jupyter
# Use rst-roles and rst-directives to list roles and directives from
# Sphinx and its extensions so that they don't get flagged when using
# flake8-rst-docstrings.
rst-roles =
    abbr
    any
    attr
    cite
    cite:ct
    cite:cts
    cite:p
    cite:ps
    cite:t
    cite:ts
    class
    command
    confval
    data
    dfn
    doc
    download
    envvar
    eq
    event
    exc
    file
    func
    guilabel
    kbd
    keyword
    makevar
    manpage
    menuselection
    meth
    mod
    numref
    option
    pep
    program
    ref
    regexp
    rst:dir
    samp
    term
    token
rst-directives =
    codeauthor
    confval
    deprecated
    event
    highlight
    hlist
    index
    literalinclude
    nbgallery
    only
    rst:directive
    sectionauthor
    seealso
    tabularcolumns
    todo
    versionadded
    versionchanged
enable-extensions =
    # Look for strings that have {} in them but aren't f-strings.
    # If there is a false positive from this in a file, put that in
    # per-file-ignores.
    FS003
per-file-ignores =
    plasmapy/formulary/__init__.py:E402,F403
    plasmapy/__init__.py:FS003
    plasmapy/diagnostics/charged_particle_radiography.py:FS003
    plasmapy/analysis/fit_functions.py:RST499

[coverage:run]
omit =
    ci-helpers/*
    */tests/*
    plasmapy/utils/calculator/*
    plasmapy/version.py

[coverage:report]
exclude_lines =
    coverage: ignore
    ImportError
    ModuleNotFoundError
    @vectorize
    @numba.vectorize
    @numba.jit
    @jit
    @numba.njit
    @njit

[codespell]
skip = .tox,.git,.hypothesis,_build,__pycache__,*egg*,*.png
ignore-words-list =
    aci,
    afe,
    ba,
    circularly,
    dne,
    ect,
    explin,
    fo,
    fof,
    hist,
    hve,
    gud,
    nd,
    noo,
    nwo,
    ot,
    recuse,
    ro,
    te,
    ue,
    ue,
    windo
